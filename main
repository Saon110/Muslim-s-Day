# include "iGraphics.h"
#include<math.h>
#include<time.h>
#include<stdlib.h>
#include<string.h>

int x,y,dx,dy,a1,b1,a2,b2;
double o,xs=110,ys=682+65,sx,sy,ps;
double xm=110,ym=682+50,mx,my,pm;
double xh=110,yh=682+30,hx,hy,ph;
double H,M,S;
int i,d,m,yr;
char Day[2],Month[2],Year[100],Day2[2],Month2[5],Year2[100];
int len1,len2,len3;
int mode1,mode2,mode3,mode,modes1,modes2,modes3,modes4,modes5;
char sunrise_hour[3];
	char sunrise_min[3];
	char fajr_hour[3];
	char fajr_min[3];
	char dhuhr_hour[3];
	char dhuhr_min[3];
	char asr_hour[3];
	char asr_min[3];
	char maghrib_hour[3];
	char maghrib_min[3];
	char isha_hour[3];
	char isha_min[3];
	int sunr_hour,sunr_min,f_hour,f_min,d_hour,d_min,a_hour,a_min,m_hour,m_min,i_hour,i_min;
	int Hour,Minute,Second;
	char rem_hour[10];
	char rem_min[10];
	char rem_sec[10];

/*double o,x=500,y=360+250,sx,sy,p;
double xm=500,ym=360+220,mx,my,pm;
double xh=500,yh=360+200,hx,hy,ph,H,M,S;
int i;*/

/*
function iDraw() is called again and again by the system.
*/
void drawTextBox1()
{
	iSetColor(255, 255, 255);
	iFilledRectangle(365,630,35,30);
}
void drawTextBox2()
{
	iSetColor(255, 255, 255);
	iFilledRectangle(408,630,39,30);
}
void drawTextBox3()
{
	iSetColor(255, 255, 255);
	iFilledRectangle(455,630,80,30);
}
void iDraw()
{
    if(mode==0){
        iShowBMP(100,100,"mosque2.bmp");
    }
    if(mode==1){
    //iShowBMP(630,680,"sun,bmp");
    struct schedule {

     char date[5];
     char Fajr[20];
     char sunrise[20];
     char Dhuhr[20];
     char Asr[20];
     char Maghrib[20];
     char Isha[20];
     /*char sunset[20];
     char f_dawn[20];
     char f_noon[20];
     char f_evening[20];
     char sehri[20];
     char iftar[20];*/
     //char salatul_duha[20];

};
    struct schedule j_day[31]={
      {"1", "05:21 AM", "06:40 AM", "12:02 PM", "03:03 PM", "05:23 PM", "06:44 PM"},
      {"2", "05:21 AM", "06:40 AM", "12:03 PM", "03:04 PM", "05:24 PM", "06:44 PM"},
      {"3", "05:21 AM", "06:41 AM", "12:03 PM", "03:04 PM", "05:25 PM", "06:45 PM"},
      {"4", "05:22 AM", "06:41 AM", "12:04 PM", "03:05 PM", "05:25 PM", "06:46 PM"},
      {"5", "05:22 AM", "06:41 AM", "12:04 PM", "03:06 PM", "05:26 PM", "06:46 PM"},
      {"6", "05:22 AM", "06:41 AM", "12:04 PM", "03:06 PM", "05:27 PM", "06:47 PM"},
      {"7", "05:22 AM", "06:42 AM", "12:05 PM", "03:07 PM", "05:27 PM", "06:47 PM"},
      {"8", "05:23 AM", "06:42 AM", "12:05 PM", "03:08 PM", "05:28 PM", "06:48 PM"},
      {"9", "05:23 AM", "06:42 AM", "12:06 PM", "03:08 PM", "05:29 PM", "06:49 PM"},
      {"10", "05:23 AM", "06:42 AM", "12:06 PM", "03:09 PM", "05:29 PM", "06:49 PM"},
      {"11", "05:23 AM", "06:42 AM", "12:07 PM", "03:10 PM", "05:30 PM", "06:50 PM"},
      {"12", "05:23 AM", "06:42 AM", "12:07 PM", "03:10 PM", "05:31 PM", "06:51 PM"},
      {"13", "05:24 AM", "06:42 AM", "12:07 PM", "03:11 PM", "05:32 PM", "06:51 PM"},
      {"14", "05:24 AM", "06:42 AM", "12:08 PM", "03:12 PM", "05:32 PM", "06:52 PM"},
      {"15", "05:24 AM", "06:42 AM", "12:08 PM", "03:12 PM", "05:33 PM", "06:52 PM"},
      {"16", "05:24 AM", "06:42 AM", "12:08 PM", "03:13 PM", "05:34 PM", "06:53 PM"},
      {"17", "05:24 AM", "06:42 AM", "12:09 PM", "03:13 PM", "05:34 PM", "06:54 PM"},
      {"18", "05:24 AM", "06:42 AM", "12:09 PM", "03:14 PM", "05:35 PM", "06:54 PM"},
      {"19", "05:24 AM", "06:42 AM", "12:09 PM", "03:15 PM", "05:36 PM", "06:55 PM"},
      {"20", "05:24 AM", "06:42 AM", "12:10 PM", "03:15 PM", "05:37 PM", "06:56 PM"},
      {"21", "05:24 AM", "06:42 AM", "12:10 PM", "03:16 PM", "05:37 PM", "06:56 PM"},
      {"22", "05:24 AM", "06:42 AM", "12:10 PM", "03:17 PM", "05:38 PM", "06:57 PM"},
      {"23", "05:24 AM", "06:42 AM", "12:11 PM", "03:17 PM", "05:39 PM", "06:57 PM"},
      {"24", "05:24 AM", "06:41 AM", "12:11 PM", "03:18 PM", "05:40 PM", "06:58 PM"},
      {"25", "05:23 AM", "06:41 AM", "12:11 PM", "03:19 PM", "05:40 PM", "06:59 PM"},
      {"26", "05:23 AM", "06:41 AM", "12:11 PM", "03:19 PM", "05:41 PM", "06:59 PM"},
      {"27", "05:23 AM", "06:41 AM", "12:11 PM", "03:20 PM", "05:42 PM", "07:00 PM"},
      {"28", "05:23 AM", "06:40 AM", "12:12 PM", "03:20 PM", "05:42 PM", "07:00 PM"},
      {"29", "05:23 AM", "06:40 AM", "12:12 PM", "03:21 PM", "05:43 PM", "07:01 PM"},
      {"30", "05:22 AM", "06:40 AM", "12:12 PM", "03:21 PM", "05:44 PM", "07:02 PM"},
      {"31", "05:22 AM", "06:39 AM", "12:12 PM", "03:22 PM", "05:44 PM", "07:02 PM"}
};


struct schedule f_day[28]={
    {"1","05:22 AM", "06:39 AM", "12:12 PM", "03:22 PM", "05:45 PM", "07:03 PM"},
    {"2","05:22 AM", "06:38 AM", "12:12 PM", "03:23 PM", "05:46 PM", "07:03 PM"},
    {"3","05:21 AM", "06:38 AM", "12:13 PM", "03:24 PM", "05:47 PM", "07:04 PM"},
    {"4","05:21 AM", "06:38 AM", "12:13 PM", "03:24 PM", "05:47 PM", "07:05 PM"},
    {"5","05:20 AM", "06:37 AM", "12:13 PM", "03:25 PM", "05:48 PM", "07:05 PM"},
    {"6","05:20 AM", "06:37 AM", "12:13 PM", "03:25 PM", "05:48 PM", "07:06 PM"},
    {"7","05:20 AM", "06:36 AM", "12:13 PM", "03:25 PM", "05:49 PM", "07:06 PM"},
    {"8","05:19 AM", "06:35 AM", "12:13 PM", "03:26 PM", "05:50 PM", "07:07 PM"},
    {"9","05:19 AM", "06:35 AM", "12:13 PM", "03:26 PM", "05:50 PM", "07:07 PM"},
    {"10","05:18 AM", "06:34 AM", "12:13 PM", "03:27 PM", "05:51 PM", "07:08 PM"},
    {"11","05:18 AM", "06:34 AM", "12:13 PM", "03:27 PM", "05:52 PM", "07:08 PM"},
    {"12","05:17 AM", "06:33 AM", "12:13 PM", "03:28 PM", "05:52 PM", "07:09 PM"},
    {"13","05:17 AM", "06:33 AM", "12:13 PM", "03:28 PM", "05:53 PM", "07:09 PM"},
    {"14","05:16 AM", "06:32 AM", "12:13 PM", "03:28 PM", "05:53 PM", "07:10 PM"},
    {"15","05:16 AM", "06:31 AM", "12:13 PM", "03:29 PM", "05:54 PM", "07:10 PM"},
    {"16","05:15 AM", "06:31 AM", "12:13 PM", "03:29 PM", "05:55 PM", "07:11 PM"},
    {"17","05:14 AM", "06:30 AM", "12:13 PM", "03:29 PM", "05:55 PM", "07:11 PM"},
    {"18","05:14 AM", "06:29 AM", "12:13 PM", "03:30 PM", "05:56 PM", "07:12 PM"},
    {"19","05:13 AM", "06:28 AM", "12:13 PM", "03:30 PM", "05:56 PM", "07:12 PM"},
    {"20","05:12 AM", "06:28 AM", "12:13 PM", "03:30 PM", "05:57 PM", "07:13 PM"},
    {"21","05:12 AM", "06:27 AM", "12:12 PM", "03:30 PM", "05:57 PM", "07:13 PM"},
    {"22","05:11 AM", "06:26 AM", "12:12 PM", "03:31 PM", "05:58 PM", "07:14 PM"},
    {"23","05:10 AM", "06:25 AM", "12:12 PM", "03:31 PM", "05:58 PM", "07:14 PM"},
    {"24","05:10 AM", "06:25 AM", "12:12 PM", "03:31 PM", "05:59 PM", "07:15 PM"},
    {"25","05:09 AM", "06:24 AM", "12:12 PM", "03:31 PM", "06:00 PM", "07:15 PM"},
    {"26","05:08 AM", "06:23 AM", "12:12 PM", "03:32 PM", "06:00 PM", "07:16 PM"},
    {"27","05:07 AM", "06:22 AM", "12:12 PM", "03:32 PM", "06:01 PM", "07:16 PM"},
    {"28","05:06 AM", "06:21 AM", "12:11 PM", "03:32 PM", "06:01 PM", "07:17 PM"}
};


struct schedule m_day[31]={
    {"1", "05:06 AM", "06:20 AM", "12:11 PM", "03:32 PM", "06:02 PM", "07:17 PM"},
    {"2", "05:05 AM", "06:20 AM", "12:11 PM", "03:32 PM", "06:02 PM", "07:17 PM"},
    {"3", "05:04 AM", "06:19 AM", "12:11 PM", "03:32 PM", "06:02 PM", "07:18 PM"},
    {"4", "05:03 AM", "06:18 AM", "12:11 PM", "03:32 PM", "06:03 PM", "07:18 PM"},
    {"5", "05:02 AM", "06:17 AM", "12:10 PM", "03:33 PM", "06:03 PM", "07:19 PM"},
    {"6", "05:01 AM", "06:16 AM", "12:10 PM", "03:33 PM", "06:04 PM", "07:19 PM"},
    {"7", "05:00 AM", "06:15 AM", "12:10 PM", "03:33 PM", "06:04 PM", "07:20 PM"},
    {"8", "04:59 AM", "06:14 AM", "12:10 PM", "03:33 PM", "06:05 PM", "07:20 PM"},
    {"9", "04:59 AM", "06:13 AM", "12:09 PM", "03:33 PM", "06:05 PM", "07:20 PM"},
    {"10", "04:58 AM", "06:12 AM", "12:09 PM", "03:33 PM", "06:06 PM", "07:21 PM"},
    {"11", "04:57 AM", "06:11 AM", "12:09 PM", "03:33 PM", "06:06 PM", "07:21 PM"},
    {"12", "04:56 AM", "06:10 AM", "12:09 PM", "03:33 PM", "06:06 PM", "07:22 PM"},
    {"13", "04:55 AM", "06:09 AM", "12:08 PM", "03:33 PM", "06:07 PM", "07:22 PM"},
    {"14", "04:54 AM", "06:08 AM", "12:08 PM", "03:33 PM", "06:07 PM", "07:23 PM"},
    {"15", "04:53 AM", "06:07 AM", "12:08 PM", "03:33 PM", "06:08 PM", "07:23 PM"},
    {"16", "04:52 AM", "06:06 AM", "12:08 PM", "03:33 PM", "06:08 PM", "07:24 PM"},
    {"17", "04:51 AM", "06:05 AM", "12:07 PM", "03:33 PM", "06:09 PM", "07:24 PM"},
    {"18", "04:50 AM", "06:05 AM", "12:07 PM", "03:32 PM", "06:09 PM", "07:24 PM"},
    {"19", "04:49 AM", "06:04 AM", "12:07 PM", "03:32 PM", "06:09 PM", "07:25 PM"},
    {"20", "04:48 AM", "06:03 AM", "12:06 PM", "03:32 PM", "06:10 PM", "07:25 PM"},
    {"21", "04:47 AM", "06:02 AM", "12:06 PM", "03:32 PM", "06:10 PM", "07:26 PM"},
    {"22", "04:46 AM", "06:01 AM", "12:06 PM", "03:32 PM", "06:11 PM", "07:26 PM"},
    {"23", "04:45 AM", "06:00 AM", "12:06 PM", "03:32 PM", "06:11 PM", "07:27 PM"},
    {"24", "04:43 AM", "05:59 AM", "12:05 PM", "03:32 PM", "06:11 PM", "07:27 PM"},
    {"25", "04:42 AM", "05:58 AM", "12:05 PM", "03:32 PM", "06:12 PM", "07:28 PM"},
    {"26", "04:41 AM", "05:57 AM", "12:05 PM", "03:31 PM", "06:12 PM", "07:28 PM"},
    {"27", "04:40 AM", "05:56 AM", "12:04 PM", "03:31 PM", "06:13 PM", "07:28 PM"},
    {"28", "04:39 AM", "05:55 AM", "12:04 PM", "03:31 PM", "06:13 PM", "07:29 PM"},
    {"29", "04:38 AM", "05:54 AM", "12:04 PM", "03:31 PM", "06:13 PM", "07:29 PM"},
    {"30", "04:37 AM", "05:53 AM", "12:03 PM", "03:31 PM", "06:14 PM", "07:30 PM"},
    {"31", "04:36 AM", "05:52 AM", "12:03 PM", "03:30 PM", "06:14 PM", "07:30 PM"}
};


struct schedule ap_day[30]={
    {"1", "04:35 AM", "05:51 AM", "12:03 PM", "03:30 PM", "06:14 PM", "07:31 PM"},
    {"2", "04:34 AM", "05:50 AM", "12:03 PM", "03:30 PM", "06:15 PM", "07:31 PM"},
    {"3", "04:33 AM", "05:49 AM", "12:02 PM", "03:30 PM", "06:15 PM", "07:32 PM"},
    {"4", "04:32 AM", "05:48 AM", "12:02 PM", "03:30 PM", "06:16 PM", "07:32 PM"},
    {"5", "04:31 AM", "05:47 AM", "12:02 PM", "03:29 PM", "06:16 PM", "07:33 PM"},
    {"6", "04:30 AM", "05:46 AM", "12:01 PM", "03:29 PM", "06:16 PM", "07:33 PM"},
    {"7", "04:28 AM", "05:45 AM", "12:01 PM", "03:29 PM", "06:17 PM", "07:34 PM"},
    {"8", "04:27 AM", "05:44 AM", "12:01 PM", "03:29 PM", "06:17 PM", "07:34 PM"},
    {"9", "04:26 AM", "05:43 AM", "12:01 PM", "03:28 PM", "06:18 PM", "07:35 PM"},
    {"10", "04:25 AM", "05:42 AM", "12:00 PM", "03:28 PM", "06:18 PM", "07:35 PM"},
    {"11", "04:24 AM", "05:41 AM", "12:00 PM", "03:28 PM", "06:18 PM", "07:36 PM"},
    {"12", "04:23 AM", "05:40 AM", "12:00 PM", "03:27 PM", "06:19 PM", "07:36 PM"},
    {"13", "04:22 AM", "05:39 AM", "12:00 PM", "03:27 PM", "06:19 PM", "07:37 PM"},
    {"14", "04:21 AM", "05:38 AM", "11:59 AM", "03:27 PM", "06:20 PM", "07:38 PM"},
    {"15", "04:20 AM", "05:37 AM", "11:59 AM", "03:27 PM", "06:20 PM", "07:38 PM"},
    {"16", "04:19 AM", "05:36 AM", "11:59 AM", "03:26 PM", "06:20 PM", "07:39 PM"},
    {"17", "04:18 AM", "05:36 AM", "11:59 AM", "03:26 PM", "06:21 PM", "07:39 PM"},
    {"18", "04:17 AM", "05:35 AM", "11:58 AM", "03:26 PM", "06:21 PM", "07:40 PM"},
    {"19", "04:16 AM", "05:34 AM", "11:58 AM", "03:25 PM", "06:22 PM", "07:40 PM"},
    {"20", "04:15 AM", "05:33 AM", "11:58 AM", "03:25 PM", "06:22 PM", "07:41 PM"},
    {"21", "04:14 AM", "05:32 AM", "11:58 AM", "03:25 PM", "06:23 PM", "07:42 PM"},
    {"22", "04:13 AM", "05:31 AM", "11:57 AM", "03:24 PM", "06:23 PM", "07:42 PM"},
    {"23", "04:12 AM", "05:30 AM", "11:57 AM", "03:24 PM", "06:23 PM", "07:43 PM"},
    {"24", "04:11 AM", "05:30 AM", "11:57 AM", "03:24 PM", "06:24 PM", "07:43 PM"},
    {"25", "04:10 AM", "05:29 AM", "11:57 AM", "03:24 PM", "06:24 PM", "07:44 PM"},
    {"26", "04:09 AM", "05:28 AM", "11:57 AM", "03:23 PM", "06:25 PM", "07:45 PM"},
    {"27", "04:08 AM", "05:27 AM", "11:57 AM", "03:23 PM", "06:25 PM", "07:45 PM"},
    {"28", "04:07 AM", "05:27 AM", "11:56 AM", "03:23 PM", "06:26 PM", "07:46 PM"},
    {"29", "04:06 AM", "05:26 AM", "11:56 AM", "03:22 PM", "06:26 PM", "07:47 PM"},
    {"30", "04:05 AM", "05:25 AM", "11:56 AM", "03:22 PM", "06:27 PM", "07:47 PM"}
};


struct schedule my_day[31]={
        {"1", "04:04 AM", "05:24 AM", "11:56 AM", "03:22 PM", "06:27 PM", "07:48 PM"},
        {"2", "04:03 AM", "05:24 AM", "11:56 AM", "03:22 PM", "06:28 PM", "07:49 PM"},
        {"3", "04:02 AM", "05:23 AM", "11:56 AM", "03:21 PM", "06:28 PM", "07:49 PM"},
        {"4", "04:02 AM", "05:22 AM", "11:56 AM", "03:21 PM", "06:28 PM", "07:50 PM"},
        {"5", "04:01 AM", "05:22 AM", "11:56 AM", "03:21 PM", "06:29 PM", "07:51 PM"},
        {"6", "04:00 AM", "05:21 AM", "11:56 AM", "03:20 PM", "06:29 PM", "07:51 PM"},
        {"7", "03:59 AM", "05:20 AM", "11:55 AM", "03:20 PM", "06:30 PM", "07:52 PM"},
        {"8", "03:58 AM", "05:20 AM", "11:55 AM", "03:20 PM", "06:30 PM", "07:53 PM"},
        {"9", "03:58 AM", "05:19 AM", "11:55 AM", "03:20 PM", "06:31 PM", "07:53 PM"},
        {"10", "03:57 AM", "05:19 AM", "11:55 AM", "03:19 PM", "06:31 PM", "07:54 PM"},
        {"11", "03:56 AM", "05:18 AM", "11:55 AM", "03:19 PM", "06:32 PM", "07:55 PM"},
        {"12", "03:55 AM", "05:18 AM", "11:55 AM", "03:19 PM", "06:32 PM", "07:55 PM"},
        {"13", "03:55 AM", "05:17 AM", "11:55 AM", "03:19 PM", "06:33 PM", "07:56 PM"},
        {"14", "03:54 AM", "05:17 AM", "11:55 AM", "03:19 PM", "06:33 PM", "07:57 PM"},
        {"15", "03:53 AM", "05:16 AM", "11:55 AM", "03:18 PM", "06:34 PM", "07:57 PM"},
        {"16", "03:53 AM", "05:16 AM", "11:55 AM", "03:18 PM", "06:34 PM", "07:58 PM"},
        {"17", "03:52 AM", "05:15 AM", "11:55 AM", "03:18 PM", "06:35 PM", "07:59 PM"},
        {"18", "03:51 AM", "05:15 AM", "11:55 AM", "03:18 PM", "06:35 PM", "07:59 PM"},
        {"19", "03:51 AM", "05:14 AM", "11:55 AM", "03:18 PM", "06:36 PM", "08:00 PM"},
        {"20", "03:50 AM", "05:14 AM", "11:55 AM", "03:17 PM", "06:36 PM", "08:01 PM"},
        {"21", "03:50 AM", "05:14 AM", "11:55 AM", "03:17 PM", "06:37 PM", "08:01 PM"},
        {"22", "03:49 AM", "05:13 AM", "11:56 AM", "03:17 PM", "06:37 PM", "08:02 PM"},
        {"23", "03:49 AM", "05:13 AM", "11:56 AM", "03:17 PM", "06:38 PM", "08:03 PM"},
        {"24", "03:48 AM", "05:13 AM", "11:56 AM", "03:17 PM", "06:38 PM", "08:03 PM"},
        {"25", "03:48 AM", "05:12 AM", "11:56 AM", "03:17 PM", "06:39 PM", "08:04 PM"},
        {"26", "03:47 AM", "05:12 AM", "11:56 AM", "03:17 PM", "06:39 PM", "08:05 PM"},
        {"27", "03:47 AM", "05:12 AM", "11:56 AM", "03:17 PM", "06:39 PM", "08:05 PM"},
        {"28", "03:46 AM", "05:12 AM", "11:56 AM", "03:17 PM", "06:40 PM", "08:06 PM"},
        {"29", "03:46 AM", "05:11 AM", "11:56 AM", "03:17 PM", "06:40 PM", "08:06 PM"},
        {"30", "03:46 AM", "05:11 AM", "11:56 AM", "03:17 PM", "06:41 PM", "08:07 PM"},
        {"31", "03:46 AM", "05:11 AM", "11:57 AM", "03:17 PM", "06:41 PM", "08:08 PM"}
};


struct schedule jn_day[30]={
        {"1", "03:45 AM", "05:11 AM", "11:57 AM", "03:16 PM", "06:42 PM", "08:08 PM"},
        {"2", "03:45 AM", "05:11 AM", "11:57 AM", "03:16 PM", "06:42 PM", "08:09 PM"},
        {"3", "03:45 AM", "05:11 AM", "11:57 AM", "03:16 PM", "06:43 PM", "08:09 PM"},
        {"4", "03:45 AM", "05:10 AM", "11:57 AM", "03:17 PM", "06:43 PM", "08:10 PM"},
        {"5", "03:44 AM", "05:10 AM", "11:57 AM", "03:17 PM", "06:43 PM", "08:10 PM"},
        {"6", "03:44 AM", "05:10 AM", "11:57 AM", "03:17 PM", "06:44 PM", "08:11 PM"},
        {"7", "03:44 AM", "05:10 AM", "11:58 AM", "03:17 PM", "06:44 PM", "08:11 PM"},
        {"8", "03:44 AM", "05:10 AM", "11:58 AM", "03:17 PM", "06:45 PM", "08:12 PM"},
        {"9", "03:44 AM", "05:10 AM", "11:58 AM", "03:17 PM", "06:45 PM", "08:12 PM"},
        {"10", "03:44 AM", "05:10 AM", "11:58 AM", "03:17 PM", "06:45 PM", "08:13 PM"},
        {"11", "03:44 AM", "05:10 AM", "11:58 AM", "03:17 PM", "06:46 PM", "08:13 PM"},
        {"12", "03:44 AM", "05:10 AM", "11:59 AM", "03:17 PM", "06:46 PM", "08:14 PM"},
        {"13", "03:44 AM", "05:10 AM", "11:59 AM", "03:17 PM", "06:46 PM", "08:14 PM"},
        {"14", "03:44 AM", "05:10 AM", "11:59 AM", "03:17 PM", "06:47 PM", "08:14 PM"},
        {"15", "03:44 AM", "05:11 AM", "11:59 AM", "03:18 PM", "06:47 PM", "08:15 PM"},
        {"16", "03:44 AM", "05:11 AM", "12:00 PM", "03:18 PM", "06:47 PM", "08:15 PM"},
        {"17", "03:44 AM", "05:11 AM", "12:00 PM", "03:18 PM", "06:48 PM", "08:15 PM"},
        {"18", "03:44 AM", "05:11 AM", "12:00 PM", "03:18 PM", "06:48 PM", "08:16 PM"},
        {"19", "03:44 AM", "05:11 AM", "12:00 PM", "03:18 PM", "06:48 PM", "08:16 PM"},
        {"20", "03:45 AM", "05:11 AM", "12:00 PM", "03:18 PM", "06:48 PM", "08:16 PM"},
        {"21", "03:45 AM", "05:12 AM", "12:01 PM", "03:19 PM", "06:49 PM", "08:16 PM"},
        {"22", "03:45 AM", "05:12 AM", "12:01 PM", "03:19 PM", "06:49 PM", "08:17 PM"},
        {"23", "03:45 AM", "05:12 AM", "12:01 PM", "03:19 PM", "06:49 PM", "08:17 PM"},
        {"24", "03:46 AM", "05:12 AM", "12:01 PM", "03:19 PM", "06:49 PM", "08:17 PM"},
        {"25", "03:46 AM", "05:13 AM", "12:01 PM", "03:20 PM", "06:49 PM", "08:17 PM"},
        {"26", "03:46 AM", "05:13 AM", "12:02 PM", "03:20 PM", "06:50 PM", "08:17 PM"},
        {"27", "03:47 AM", "05:13 AM", "12:02 PM", "03:20 PM", "06:50 PM", "08:17 PM"},
        {"28", "03:47 AM", "05:13 AM", "12:02 PM", "03:20 PM", "06:50 PM", "08:17 PM"},
        {"29", "03:47 AM", "05:14 AM", "12:02 PM", "03:21 PM", "06:50 PM", "08:17 PM"},
        {"30", "03:48 AM", "05:14 AM", "12:03 PM", "03:21 PM", "06:50 PM", "08:17 PM"}
};


struct schedule jl_day[31]={
        {"1", "03:48 AM", "05:14 AM", "12:03 PM", "03:21 PM", "06:50 PM", "08:17 PM"},
        {"2", "03:48 AM", "05:15 AM", "12:03 PM", "03:22 PM", "06:50 PM", "08:17 PM"},
        {"3", "03:49 AM", "05:15 AM", "12:03 PM", "03:22 PM", "06:50 PM", "08:17 PM"},
        {"4", "03:49 AM", "05:15 AM", "12:03 PM", "03:22 PM", "06:50 PM", "08:17 PM"},
        {"5", "03:50 AM", "05:16 AM", "12:03 PM", "03:22 PM", "06:50 PM", "08:17 PM"},
        {"6", "03:50 AM", "05:16 AM", "12:04 PM", "03:23 PM", "06:50 PM", "08:17 PM"},
        {"7", "03:51 AM", "05:16 AM", "12:04 PM", "03:23 PM", "06:50 PM", "08:17 PM"},
        {"8", "03:51 AM", "05:17 AM", "12:04 PM", "03:23 PM", "06:50 PM", "08:16 PM"},
        {"9", "03:52 AM", "05:17 AM", "12:04 PM", "03:24 PM", "06:50 PM", "08:16 PM"},
        {"10", "03:52 AM", "05:18 AM", "12:04 PM", "03:24 PM", "06:50 PM", "08:16 PM"},
        {"11", "03:53 AM", "05:18 AM", "12:04 PM", "03:24 PM", "06:49 PM", "08:16 PM"},
        {"12", "03:54 AM", "05:19 AM", "12:04 PM", "03:25 PM", "06:49 PM", "08:15 PM"},
        {"13", "03:54 AM", "05:19 AM", "12:05 PM", "03:25 PM", "06:49 PM", "08:15 PM"},
        {"14", "03:55 AM", "05:19 AM", "12:05 PM", "03:25 PM", "06:49 PM", "08:15 PM"},
        {"15", "03:55 AM", "05:20 AM", "12:05 PM", "03:25 PM", "06:49 PM", "08:14 PM"},
        {"16", "03:56 AM", "05:20 AM", "12:05 PM", "03:26 PM", "06:49 PM", "08:14 PM"},
        {"17", "03:57 AM", "05:21 AM", "12:05 PM", "03:26 PM", "06:48 PM", "08:14 PM"},
        {"18", "03:57 AM", "05:21 AM", "12:05 PM", "03:26 PM", "06:48 PM", "08:13 PM"},
        {"19", "03:58 AM", "05:22 AM", "12:05 PM", "03:27 PM", "06:48 PM", "08:13 PM"},
        {"20", "03:58 AM", "05:22 AM", "12:05 PM", "03:27 PM", "06:47 PM", "08:12 PM"},
        {"21", "03:59 AM", "05:22 AM", "12:05 PM", "03:27 PM", "06:47 PM", "08:12 PM"},
        {"22", "04:00 AM", "05:23 AM", "12:05 PM", "03:27 PM", "06:47 PM", "08:11 PM"},
        {"23", "04:00 AM", "05:23 AM", "12:05 PM", "03:28 PM", "06:46 PM", "08:11 PM"},
        {"24", "04:01 AM", "05:24 AM", "12:05 PM", "03:28 PM", "06:46 PM", "08:10 PM"},
        {"25", "04:02 AM", "05:24 AM", "12:05 PM", "03:28 PM", "06:45 PM", "08:09 PM"},
        {"26", "04:02 AM", "05:25 AM", "12:05 PM", "03:28 PM", "06:45 PM", "08:09 PM"},
        {"27", "04:03 AM", "05:25 AM", "12:05 PM", "03:28 PM", "06:45 PM", "08:08 PM"},
        {"28", "04:03 AM", "05:26 AM", "12:05 PM", "03:29 PM", "06:44 PM", "08:07 PM"},
        {"29", "04:04 AM", "05:26 AM", "12:05 PM", "03:29 PM", "06:44 PM", "08:07 PM"},
        {"30", "04:05 AM", "05:26 AM", "12:05 PM", "03:29 PM", "06:43 PM", "08:06 PM"},
        {"31", "04:05 AM", "05:27 AM", "12:05 PM", "03:29 PM", "06:43 PM", "08:05 PM"}
};

struct schedule ag_day[31]={
        {"1", "04:06 AM", "05:27 AM", "12:05 PM", "03:29 PM", "06:42 PM", "08:04 PM"},
        {"2", "04:07 AM", "05:28 AM", "12:05 PM", "03:29 PM", "06:41 PM", "08:04 PM"},
        {"3", "04:07 AM", "05:28 AM", "12:05 PM", "03:29 PM", "06:41 PM", "08:03 PM"},
        {"4", "04:08 AM", "05:29 AM", "12:05 PM", "03:30 PM", "06:40 PM", "08:02 PM"},
        {"5", "04:09 AM", "05:29 AM", "12:05 PM", "03:30 PM", "06:40 PM", "08:01 PM"},
        {"6", "04:09 AM", "05:30 AM", "12:05 PM", "03:30 PM", "06:39 PM", "08:00 PM"},
        {"7", "04:10 AM", "05:30 AM", "12:05 PM", "03:30 PM", "06:38 PM", "08:00 PM"},
        {"8", "04:10 AM", "05:30 AM", "12:05 PM", "03:30 PM", "06:38 PM", "07:59 PM"},
        {"9", "04:11 AM", "05:31 AM", "12:04 PM", "03:30 PM", "06:37 PM", "07:58 PM"},
        {"10", "04:12 AM", "05:31 AM", "12:04 PM", "03:30 PM", "06:36 PM", "07:57 PM"},
        {"11", "04:12 AM", "05:32 AM", "12:04 PM", "03:30 PM", "06:35 PM", "07:56 PM"},
        {"12", "04:13 AM", "05:32 AM", "12:04 PM", "03:30 PM", "06:35 PM", "07:55 PM"},
        {"13", "04:14 AM", "05:32 AM", "12:04 PM", "03:30 PM", "06:34 PM", "07:54 PM"},
        {"14", "04:14 AM", "05:33 AM", "12:04 PM", "03:30 PM", "06:33 PM", "07:53 PM"},
        {"15", "04:15 AM", "05:33 AM", "12:03 PM", "03:30 PM", "06:32 PM", "07:52 PM"},
        {"16", "04:15 AM", "05:34 AM", "12:03 PM", "03:30 PM", "06:32 PM", "07:51 PM"},
        {"17", "04:16 AM", "05:34 AM", "12:03 PM", "03:30 PM", "06:31 PM", "07:50 PM"},
        {"18", "04:16 AM", "05:34 AM", "12:03 PM", "03:30 PM", "06:30 PM", "07:49 PM"},
        {"19", "04:17 AM", "05:35 AM", "12:03 PM", "03:29 PM", "06:29 PM", "07:48 PM"},
        {"20", "04:18 AM", "05:35 AM", "12:02 PM", "03:29 PM", "06:28 PM", "07:47 PM"},
        {"21", "04:18 AM", "05:36 AM", "12:02 PM", "03:29 PM", "06:27 PM", "07:46 PM"},
        {"22", "04:19 AM", "05:36 AM", "12:02 PM", "03:29 PM", "06:27 PM", "07:45 PM"},
        {"23", "04:19 AM", "05:36 AM", "12:02 PM", "03:29 PM", "06:26 PM", "07:44 PM"},
        {"24", "04:20 AM", "05:37 AM", "12:01 PM", "03:29 PM", "06:25 PM", "07:43 PM"},
        {"25", "04:20 AM", "05:37 AM", "12:01 PM", "03:29 PM", "06:24 PM", "07:42 PM"},
        {"26", "04:21 AM", "05:37 AM", "12:01 PM", "03:28 PM", "06:23 PM", "07:41 PM"},
        {"27", "04:21 AM", "05:38 AM", "12:01 PM", "03:28 PM", "06:22 PM", "07:40 PM"},
        {"28", "04:22 AM", "05:38 AM", "12:00 PM", "03:28 PM", "06:21 PM", "07:39 PM"},
        {"29", "04:22 AM", "05:38 AM", "12:00 PM", "03:28 PM", "06:20 PM", "07:38 PM"},
        {"30", "04:23 AM", "05:39 AM", "12:00 PM", "03:27 PM", "06:19 PM", "07:37 PM"},
        {"31", "04:23 AM", "05:39 AM", "11:59 AM", "03:27 PM", "06:18 PM", "07:35 PM"}
};

struct schedule s_day[30]={
        {"1", "04:24 AM", "05:39 AM", "11:59 AM", "03:27 PM", "06:17 PM", "07:34 PM"},
        {"2", "04:24 AM", "05:40 AM", "11:59 AM", "03:26 PM", "06:16 PM", "07:33 PM"},
        {"3", "04:25 AM", "05:40 AM", "11:58 AM", "03:26 PM", "06:15 PM", "07:32 PM"},
        {"4", "04:25 AM", "05:40 AM", "11:58 AM", "03:26 PM", "06:14 PM", "07:31 PM"},
        {"5", "04:26 AM", "05:41 AM", "11:58 AM", "03:25 PM", "06:13 PM", "07:30 PM"},
        {"6", "04:26 AM", "05:41 AM", "11:57 AM", "03:25 PM", "06:12 PM", "07:29 PM"},
        {"7", "04:26 AM", "05:41 AM", "11:57 AM", "03:25 PM", "06:11 PM", "07:28 PM"},
        {"8", "04:27 AM", "05:42 AM", "11:57 AM", "03:24 PM", "06:10 PM", "07:27 PM"},
        {"9", "04:27 AM", "05:42 AM", "11:56 AM", "03:24 PM", "06:09 PM", "07:25 PM"},
        {"10", "04:28 AM", "05:42 AM", "11:56 AM", "03:23 PM", "06:08 PM", "07:24 PM"},
        {"11", "04:28 AM", "05:43 AM", "11:56 AM", "03:23 PM", "06:07 PM", "07:23 PM"},
        {"12", "04:29 AM", "05:43 AM", "11:55 AM", "03:23 PM", "06:06 PM", "07:22 PM"},
        {"13", "04:29 AM", "05:43 AM", "11:55 AM", "03:22 PM", "06:05 PM", "07:21 PM"},
        {"14", "04:29 AM", "05:44 AM", "11:55 AM", "03:22 PM", "06:04 PM", "07:20 PM"},
        {"15", "04:30 AM", "05:44 AM", "11:54 AM", "03:21 PM", "06:03 PM", "07:19 PM"},
        {"16", "04:30 AM", "05:44 AM", "11:54 AM", "03:21 PM", "06:02 PM", "07:18 PM"},
        {"17", "04:31 AM", "05:45 AM", "11:54 AM", "03:20 PM", "06:01 PM", "07:17 PM"},
        {"18", "04:31 AM", "05:45 AM", "11:53 AM", "03:20 PM", "06:00 PM", "07:15 PM"},
        {"19", "04:31 AM", "05:45 AM", "11:53 AM", "03:19 PM", "05:59 PM", "07:14 PM"},
        {"20", "04:32 AM", "05:46 AM", "11:52 AM", "03:19 PM", "05:58 PM", "07:13 PM"},
        {"21", "04:32 AM", "05:46 AM", "11:52 AM", "03:18 PM", "05:57 PM", "07:12 PM"},
        {"22", "04:32 AM", "05:46 AM", "11:52 AM", "03:18 PM", "05:56 PM", "07:11 PM"},
        {"23", "04:33 AM", "05:47 AM", "11:51 AM", "03:17 PM", "05:55 PM", "07:10 PM"},
        {"24", "04:33 AM", "05:47 AM", "11:51 AM", "03:17 PM", "05:54 PM", "07:09 PM"},
        {"25", "04:34 AM", "05:47 AM", "11:51 AM", "03:16 PM", "05:53 PM", "07:08 PM"},
        {"26", "04:34 AM", "05:48 AM", "11:50 AM", "03:15 PM", "05:52 PM", "07:07 PM"},
        {"27", "04:34 AM", "05:48 AM", "11:50 AM", "03:15 PM", "05:51 PM", "07:06 PM"},
        {"28", "04:35 AM", "05:48 AM", "11:50 AM", "03:14 PM", "05:50 PM", "07:05 PM"},
        {"29", "04:35 AM", "05:49 AM", "11:49 AM", "03:14 PM", "05:49 PM", "07:04 PM"},
        {"30", "04:35 AM", "05:49 AM", "11:49 AM", "03:13 PM", "05:48 PM", "07:03 PM"}
};


struct schedule o_day[31]={
        {"1", "04:36 AM", "05:49 AM", "11:49 AM", "03:13 PM", "05:47 PM", "07:02 PM"},
        {"2", "04:36 AM", "05:50 AM", "11:48 AM", "03:12 PM", "05:46 PM", "07:01 PM"},
        {"3", "04:37 AM", "05:50 AM", "11:48 AM", "03:12 PM", "05:45 PM", "07:00 PM"},
        {"4", "04:37 AM", "05:51 AM", "11:48 AM", "03:11 PM", "05:44 PM", "06:59 PM"},
        {"5", "04:37 AM", "05:51 AM", "11:47 AM", "03:10 PM", "05:43 PM", "06:58 PM"},
        {"6", "04:38 AM", "05:51 AM", "11:47 AM", "03:10 PM", "05:42 PM", "06:57 PM"},
        {"7", "04:38 AM", "05:52 AM", "11:47 AM", "03:09 PM", "05:41 PM", "06:56 PM"},
        {"8", "04:38 AM", "05:52 AM", "11:47 AM", "03:09 PM", "05:40 PM", "06:55 PM"},
        {"9", "04:39 AM", "05:52 AM", "11:46 AM", "03:08 PM", "05:39 PM", "06:54 PM"},
        {"10", "04:39 AM", "05:53 AM", "11:46 AM", "03:07 PM", "05:38 PM", "06:53 PM"},
        {"11", "04:39 AM", "05:53 AM", "11:46 AM", "03:07 PM", "05:37 PM", "06:52 PM"},
        {"12", "04:40 AM", "05:54 AM", "11:45 AM", "03:06 PM", "05:36 PM", "06:51 PM"},
        {"13", "04:40 AM", "05:54 AM", "11:45 AM", "03:06 PM", "05:35 PM", "06:50 PM"},
        {"14", "04:41 AM", "05:54 AM", "11:45 AM", "03:05 PM", "05:34 PM", "06:49 PM"},
        {"15", "04:41 AM", "05:55 AM", "11:45 AM", "03:05 PM", "05:33 PM", "06:49 PM"},
        {"16", "04:41 AM", "05:55 AM", "11:45 AM", "03:04 PM", "05:32 PM", "06:48 PM"},
        {"17", "04:42 AM", "05:56 AM", "11:44 AM", "03:03 PM", "05:32 PM", "06:47 PM"},
        {"18", "04:42 AM", "05:56 AM", "11:44 AM", "03:03 PM", "05:31 PM", "06:46 PM"},
        {"19", "04:43 AM", "05:57 AM", "11:44 AM", "03:02 PM", "05:30 PM", "06:45 PM"},
        {"20", "04:43 AM", "05:57 AM", "11:44 AM", "03:02 PM", "05:29 PM", "06:45 PM"},
        {"21", "04:43 AM", "05:58 AM", "11:44 AM", "03:01 PM", "05:28 PM", "06:44 PM"},
        {"22", "04:44 AM", "05:58 AM", "11:43 AM", "03:01 PM", "05:27 PM", "06:43 PM"},
        {"23", "04:44 AM", "05:59 AM", "11:43 AM", "03:00 PM", "05:27 PM", "06:42 PM"},
        {"24", "04:45 AM", "05:59 AM", "11:43 AM", "03:00 PM", "05:26 PM", "06:42 PM"},
        {"25", "04:45 AM", "06:00 AM", "11:43 AM", "02:59 PM", "05:25 PM", "06:41 PM"},
        {"26", "04:45 AM", "06:00 AM", "11:43 AM", "02:59 PM", "05:24 PM", "06:40 PM"},
        {"27", "04:46 AM", "06:01 AM", "11:43 AM", "02:58 PM", "05:24 PM", "06:40 PM"},
        {"28", "04:46 AM", "06:01 AM", "11:43 AM", "02:58 PM", "05:23 PM", "06:39 PM"},
        {"29", "04:47 AM", "06:02 AM", "11:43 AM", "02:57 PM", "05:22 PM", "06:38 PM"},
        {"30", "04:47 AM", "06:02 AM", "11:43 AM", "02:57 PM", "05:22 PM", "06:38 PM"},
        {"31", "04:48 AM", "06:03 AM", "11:43 AM", "02:56 PM", "05:21 PM", "06:37 PM"}
};

struct schedule n_day[30]={
        {"1", "04:48 AM", "06:03 AM", "11:42 AM", "02:56 PM", "05:20 PM", "06:37 PM"},
        {"2", "04:49 AM", "06:04 AM", "11:42 AM", "02:55 PM", "05:20 PM", "06:36 PM"},
        {"3", "04:49 AM", "06:05 AM", "11:42 AM", "02:55 PM", "05:19 PM", "06:36 PM"},
        {"4", "04:50 AM", "06:05 AM", "11:42 AM", "02:55 PM", "05:18 PM", "06:35 PM"},
        {"5", "04:50 AM", "06:06 AM", "11:42 AM", "02:54 PM", "05:18 PM", "06:35 PM"},
        {"6", "04:51 AM", "06:06 AM", "11:42 AM", "02:54 PM", "05:17 PM", "06:34 PM"},
        {"7", "04:51 AM", "06:07 AM", "11:43 AM", "02:54 PM", "05:17 PM", "06:34 PM"},
        {"8", "04:52 AM", "06:08 AM", "11:43 AM", "02:53 PM", "05:16 PM", "06:34 PM"},
        {"9", "04:52 AM", "06:08 AM", "11:43 AM", "02:53 PM", "05:16 PM", "06:33 PM"},
        {"10", "04:53 AM", "06:09 AM", "11:43 AM", "02:53 PM", "05:15 PM", "06:33 PM"},
        {"11", "04:53 AM", "06:09 AM", "11:43 AM", "02:52 PM", "05:15 PM", "06:33 PM"},
        {"12", "04:54 AM", "06:10 AM", "11:43 AM", "02:52 PM", "05:15 PM", "06:32 PM"},
        {"13", "04:54 AM", "06:11 AM", "11:43 AM", "02:52 PM", "05:14 PM", "06:32 PM"},
        {"14", "04:55 AM", "06:11 AM", "11:43 AM", "02:52 PM", "05:14 PM", "06:32 PM"},
        {"15", "04:55 AM", "06:12 AM", "11:43 AM", "02:51 PM", "05:14 PM", "06:32 PM"},
        {"16", "04:56 AM", "06:13 AM", "11:44 AM", "02:51 PM", "05:13 PM", "06:31 PM"},
        {"17", "04:56 AM", "06:13 AM", "11:44 AM", "02:51 PM", "05:13 PM", "06:31 PM"},
        {"18", "04:57 AM", "06:14 AM", "11:44 AM", "02:51 PM", "05:13 PM", "06:31 PM"},
        {"19", "04:57 AM", "06:15 AM", "11:44 AM", "02:51 PM", "05:12 PM", "06:31 PM"},
        {"20", "04:58 AM", "06:15 AM", "11:44 AM", "02:51 PM", "05:12 PM", "06:31 PM"},
        {"21", "04:59 AM", "06:16 AM", "11:45 AM", "02:50 PM", "05:12 PM", "06:31 PM"},
        {"22", "04:59 AM", "06:17 AM", "11:45 AM", "02:50 PM", "05:12 PM", "06:31 PM"},
        {"23", "05:00 AM", "06:17 AM", "11:45 AM", "02:50 PM", "05:12 PM", "06:31 PM"},
        {"24", "05:00 AM", "06:18 AM", "11:45 AM", "02:50 PM", "05:11 PM", "06:30 PM"},
        {"25", "05:01 AM", "06:19 AM", "11:46 AM", "02:50 PM", "05:11 PM", "06:30 PM"},
        {"26", "05:01 AM", "06:20 AM", "11:46 AM", "02:50 PM", "05:11 PM", "06:31 PM"},
        {"27", "05:02 AM", "06:20 AM", "11:46 AM", "02:50 PM", "05:11 PM", "06:31 PM"},
        {"28", "05:03 AM", "06:21 AM", "11:47 AM", "02:50 PM", "05:11 PM", "06:31 PM"},
        {"29", "05:03 AM", "06:22 AM", "11:47 AM", "02:50 PM", "05:11 PM", "06:31 PM"},
        {"30", "05:04 AM", "06:22 AM", "11:47 AM", "02:50 PM", "05:11 PM", "06:31 PM"}
};

struct schedule d_day[31]={
        {"1", "05:04 AM", "06:23 AM", "11:48 AM", "02:51 PM", "05:11 PM", "06:31 PM"},
        {"2", "05:05 AM", "06:24 AM", "11:48 AM", "02:51 PM", "05:11 PM", "06:31 PM"},
        {"3", "05:06 AM", "06:24 AM", "11:48 AM", "02:51 PM", "05:11 PM", "06:31 PM"},
        {"4", "05:06 AM", "06:25 AM", "11:49 AM", "02:51 PM", "05:12 PM", "06:31 PM"},
        {"5", "05:07 AM", "06:26 AM", "11:49 AM", "02:51 PM", "05:12 PM", "06:32 PM"},
        {"6", "05:07 AM", "06:26 AM", "11:50 AM", "02:51 PM", "05:12 PM", "06:32 PM"},
        {"7", "05:08 AM", "06:27 AM", "11:50 AM", "02:52 PM", "05:12 PM", "06:32 PM"},
        {"8", "05:09 AM", "06:28 AM", "11:51 AM", "02:52 PM", "05:12 PM", "06:32 PM"},
        {"9", "05:09 AM", "06:28 AM", "11:51 AM", "02:52 PM", "05:12 PM", "06:33 PM"},
        {"10", "05:10 AM", "06:29 AM", "11:51 AM", "02:52 PM", "05:13 PM", "06:33 PM"},
        {"11", "05:10 AM", "06:30 AM", "11:52 AM", "02:53 PM", "05:13 PM", "06:33 PM"},
        {"12", "05:11 AM", "06:30 AM", "11:52 AM", "02:53 PM", "05:13 PM", "06:34 PM"},
        {"13", "05:12 AM", "06:31 AM", "11:53 AM", "02:53 PM", "05:14 PM", "06:34 PM"},
        {"14", "05:12 AM", "06:32 AM", "11:53 AM", "02:54 PM", "05:14 PM", "06:34 PM"},
        {"15", "05:13 AM", "06:32 AM", "11:54 AM", "02:54 PM", "05:14 PM", "06:35 PM"},
        {"16", "05:13 AM", "06:33 AM", "11:54 AM", "02:55 PM", "05:15 PM", "06:35 PM"},
        {"17", "05:14 AM", "06:33 AM", "11:55 AM", "02:55 PM", "05:15 PM", "06:36 PM"},
        {"18", "05:14 AM", "06:34 AM", "11:55 AM", "02:55 PM", "05:16 PM", "06:36 PM"},
        {"19", "05:15 AM", "06:34 AM", "11:56 AM", "02:56 PM", "05:16 PM", "06:37 PM"},
        {"20", "05:15 AM", "06:35 AM", "11:56 AM", "02:56 PM", "05:16 PM", "06:37 PM"},
        {"21", "05:16 AM", "06:35 AM", "11:57 AM", "02:57 PM", "05:17 PM", "06:38 PM"},
        {"22", "05:16 AM", "06:36 AM", "11:57 AM", "02:57 PM", "05:17 PM", "06:38 PM"},
        {"23", "05:17 AM", "06:36 AM", "11:58 AM", "02:58 PM", "05:18 PM", "06:39 PM"},
        {"24", "05:17 AM", "06:37 AM", "11:58 AM", "02:58 PM", "05:18 PM", "06:39 PM"},
        {"25", "05:18 AM", "06:37 AM", "11:59 AM", "02:59 PM", "05:19 PM", "06:40 PM"},
        {"26", "05:18 AM", "06:38 AM", "11:59 AM", "02:59 PM", "05:20 PM", "06:40 PM"},
        {"27", "05:19 AM", "06:38 AM", "12:00 PM", "03:00 PM", "05:20 PM", "06:41 PM"},
        {"28", "05:19 AM", "06:39 AM", "12:00 PM", "03:01 PM", "05:21 PM", "06:41 PM"},
        {"29", "05:19 AM", "06:39 AM", "12:01 PM", "03:01 PM", "05:21 PM", "06:42 PM"},
        {"30", "05:20 AM", "06:39 AM", "12:01 PM", "03:02 PM", "05:22 PM", "06:42 PM"},
        {"31", "05:20 AM", "06:40 AM", "12:02 PM", "03:02 PM", "05:23 PM", "06:43 PM"}
};


    //place your drawing codes here
    iClear();//x=10,y=272,dx=980,dy=247,a1=337,b1=282,a2=337,b2=509;

    iSetColor(255,255,204);
    iFilledRectangle(x,y,dx,dy);
    iSetColor(255,178,102);
    iLine(a1,b1,a2,b2);
    iLine(347,333,980,333);
    iLine(347,394,980,394);
    iLine(347,455,980,455);
    iLine(347,516,980,516);

     if(modes1==0){iSetColor(0,102,51);
    iText(347,534,"FAJR",GLUT_BITMAP_TIMES_ROMAN_24);}
     if(modes1==1){iSetColor(255,0,0);
    iText(347,534,"FAJR",GLUT_BITMAP_TIMES_ROMAN_24);}

     if(modes2==0){iSetColor(0,102,51);
    iText(347,480,"DHUHR",GLUT_BITMAP_TIMES_ROMAN_24);}
     if(modes2==1){iSetColor(255,0,0);
    iText(347,480,"DHUHR",GLUT_BITMAP_TIMES_ROMAN_24);}

     if(modes3==0){iSetColor(0,102,51);
    iText(347,415,"ASR",GLUT_BITMAP_TIMES_ROMAN_24);}
     if(modes3==1){iSetColor(255,0,0);
    iText(347,415,"ASR",GLUT_BITMAP_TIMES_ROMAN_24);}

     if(modes4==0){iSetColor(0,102,51);
    iText(347,356,"MAGHRIB",GLUT_BITMAP_TIMES_ROMAN_24);}
     if(modes4==1){iSetColor(255,0,0);
    iText(347,356,"MAGHRIB",GLUT_BITMAP_TIMES_ROMAN_24);}

    if(modes5==0){iSetColor(0,102,51);
    iText(347,292,"ISHA",GLUT_BITMAP_TIMES_ROMAN_24);}
     if(modes5==1){iSetColor(255,0,0);
    iText(347,292,"ISHA",GLUT_BITMAP_TIMES_ROMAN_24);}
    /*iSetColor(0,102,51);
    iText(347,356,"MAGHRIB",GLUT_BITMAP_TIMES_ROMAN_24);
    iText(347,415,"ASR",GLUT_BITMAP_TIMES_ROMAN_24);
    iText(347,480,"DHUHR",GLUT_BITMAP_TIMES_ROMAN_24);
    iText(347,534,"FAJR",GLUT_BITMAP_TIMES_ROMAN_24);
    iText(347,292,"ISHA",GLUT_BITMAP_TIMES_ROMAN_24);*/
    iSetColor(128,255,0);
    iFilledCircle(173,370,80);
    iSetColor(255,255,204);
    iFilledCircle(173,370,65);
    iSetColor(255,255,255);
    iFilledRectangle(x,10,322,252);
    iFilledRectangle(339,10,322,252);
    iFilledRectangle(668,10,322,252);
    iSetColor(0,0,0);
    iText(30,235,"Forbidden times of prayer:",GLUT_BITMAP_HELVETICA_18);
    iText(350,235,"Sahri and Iftar time:",GLUT_BITMAP_HELVETICA_18);
    iText(680,235,"Nafl Prayers:",GLUT_BITMAP_HELVETICA_18);
    iSetColor(102,204,0);
    iFilledRectangle(x,587,980,193);
    iSetColor(255,255,255);
    iLine(613,593,613,770);
    iSetColor(0,0,255);
	iFilledCircle(110,682,90);//out
	iSetColor(255,255,255);
	iFilledCircle(110,682,70,10000);
	iSetColor(0,0,0);
	iFilledCircle(110,682,5,10000);//nextout
	iSetColor(255,255,0);
	for (i=1,o=(6/57.29);i<=60;i++,o+=(6/57.29))
	{   if(i%5!=0)
			iFilledCircle(110+80*cos(o),682+80*sin(o),2,50000);
		if (i%5==0)
			iFilledCircle(0,0,0);
	}
	iSetColor(0,255,0);
	iLine(110,682,xs,ys);///second
	iSetColor(0,120,120);
	iLine(110,682,xm,ym);///minit
	iSetColor(255,0,0);
	iLine(110,682,xh,yh);//HR
	iSetColor(0,0,0);
	iText(179-4,642-4,"4",GLUT_BITMAP_HELVETICA_12);//4(500+259,360-150)point
    iText(150-4,604+4,"5",GLUT_BITMAP_HELVETICA_12);//	iFilledCircle(500+150,360-260,5);//60
	iText(110-4,602-4,"6",GLUT_BITMAP_HELVETICA_12);//iFilledCircle(500,65,5);//lower
	iText(70-4,613-4,"7",GLUT_BITMAP_HELVETICA_12);//iFilledCircle(500-150,360-260,5);//120
	iText(30-5,682-5,"9",GLUT_BITMAP_HELVETICA_12);//iFilledCircle(205,360,5);//left
	iText(41-4,722-4,"10",GLUT_BITMAP_HELVETICA_12);//iFilledCircle(500-260,360+150,5);//150
	iText(179-4,722-4,"2",GLUT_BITMAP_HELVETICA_12);//iFilledCircle(500+259,360+150,5);//330
	iText(150-4,751-4,"1",GLUT_BITMAP_HELVETICA_12);//	iFilledCircle(500+150,360+260,5);//300
	iText(110-7.5,762-4,"12",GLUT_BITMAP_HELVETICA_12);//	iFilledCircle(500,655,5);//upper
	iText(190-5,682-5,"3",GLUT_BITMAP_HELVETICA_12);//	iFilledCircle(795,360,5);//right
	iText(70-6,751-4,"11",GLUT_BITMAP_HELVETICA_12);//	iFilledCircle(500-150,360+260,5);//240
	iText(41-4,642-4,"8",GLUT_BITMAP_HELVETICA_12);//	iFilledCircle(500-260,360-150,5);//210
	iSetColor(255,255,255);
	iText(250,640,"Choose Date",GLUT_BITMAP_HELVETICA_18);
	iText(368,665,"Day", GLUT_BITMAP_9_BY_15);
	iText(406,665,"Month", GLUT_BITMAP_9_BY_15);
	iText(475,665,"Year", GLUT_BITMAP_9_BY_15);
	iSetColor(255,255,255);
	iText(630,665,"SUNRISE",GLUT_BITMAP_HELVETICA_18);
	iText(630,620,"SUNSET",GLUT_BITMAP_HELVETICA_18);
	iLine(620,648,980,648);
	drawTextBox1();
	drawTextBox2();
	drawTextBox3();
	if(mode1 == 1)
	{
		iSetColor(0,0,0);
		iText(374,643,Day, GLUT_BITMAP_9_BY_15);
	}
	if (mode1==0)
    {
        iSetColor(0,0,0);
        iText(374,643,Day2, GLUT_BITMAP_9_BY_15);
    }

	if(mode2== 1)
	{
		iSetColor(0,0,0);
		iText(420, 643,Month, GLUT_BITMAP_9_BY_15);
	}
	if(mode2== 0)
	{
		iSetColor(0,0,0);
		iText(412, 643,Month2, GLUT_BITMAP_9_BY_15);
	}


	if(mode3==1){
		iSetColor(0,0,0);
		iText(462,643,Year, GLUT_BITMAP_9_BY_15);
	}
	if(mode3==0){
		iSetColor(0,0,0);
		iText(462,643,Year2, GLUT_BITMAP_9_BY_15);
	}
	iSetColor(0,0,0);
	if(atoi(rem_hour)<10){
       iText(120,370,"0",GLUT_BITMAP_TIMES_ROMAN_24);
       iText(132,370,rem_hour,GLUT_BITMAP_TIMES_ROMAN_24);
	}
	else{
       iText(120,370,rem_hour,GLUT_BITMAP_TIMES_ROMAN_24);
	}

	iText(151,370,":",GLUT_BITMAP_TIMES_ROMAN_24);

	if(atoi(rem_min)<10){
       iText(163,370,"0",GLUT_BITMAP_TIMES_ROMAN_24);
       iText(175,370,rem_min,GLUT_BITMAP_TIMES_ROMAN_24);
	}
	else{
        iText(163,370,rem_min,GLUT_BITMAP_TIMES_ROMAN_24);
	}

	iText(192,370,":",GLUT_BITMAP_TIMES_ROMAN_24);

	if(atoi(rem_sec)<10){
       iText(205,370,"0",GLUT_BITMAP_TIMES_ROMAN_24);
       iText(217,370,rem_sec,GLUT_BITMAP_TIMES_ROMAN_24);
	}
	else{
        iText(205,370,rem_sec,GLUT_BITMAP_TIMES_ROMAN_24);
	}
	iSetColor(0,0,0);
	iText(40,500,"Time remaining for next",GLUT_BITMAP_TIMES_ROMAN_24 );
	iText(40,450,"prayer:",GLUT_BITMAP_TIMES_ROMAN_24 );

	/*char sunrise_hour[3];
	char sunrise_min[3];
	char fajr_hour[3];
	char fajr_min[3];
	char dhuhr_hour[3];
	char dhuhr_min[3];
	char asr_hour[3];
	char asr_min[3];
	char maghrib_hour[3];
	char maghrib_min[3];
	char isha_hour[3];
	char isha_min[3];
	int sunr_hour,sunr_min,f_hour,f_min,d_hour,d_min,a_hour,a_min,m_hour,m_min,i_hour,i_min;*/






	if(atoi(Month2)==1){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=j_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=j_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=j_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=j_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=j_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=j_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=j_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=j_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=j_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=j_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=j_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=j_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,j_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,j_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,j_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,j_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,j_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,j_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(j_day[atoi(Day2)-1].date," JANUARY 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=j_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }

    //february

    if(atoi(Month2)==2){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=f_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=f_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=f_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=f_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=f_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=f_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=f_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=f_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=f_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=f_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=f_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=f_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,f_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(780,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,f_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,f_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,f_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,f_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,f_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(f_day[atoi(Day2)-1].date," FEBRUARY 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=f_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    //march

    if(atoi(Month2)==3){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=m_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=m_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=m_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=m_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=m_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=m_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=m_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=m_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=m_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=m_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=m_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=m_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,m_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,m_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,m_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,m_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,m_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,m_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(m_day[atoi(Day2)-1].date," MARCH 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=m_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    //april

    if(atoi(Month2)==4){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=ap_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=ap_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=ap_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=ap_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=ap_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=ap_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=ap_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=ap_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=ap_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=ap_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=ap_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=ap_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,ap_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,ap_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,ap_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,ap_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,ap_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,ap_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(ap_day[atoi(Day2)-1].date," APRIL 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=ap_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    //may

    if(atoi(Month2)==5){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=my_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=my_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=my_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=my_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=my_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=my_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=my_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=my_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=my_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=my_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=my_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=my_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,j_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,my_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,my_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,my_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,my_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,my_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(my_day[atoi(Day2)-1].date," MAY 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=my_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    //june

    if(atoi(Month2)==6){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=jn_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=jn_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=jn_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=jn_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=jn_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=jn_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=jn_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=jn_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=jn_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=jn_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=jn_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=jn_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,jn_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,jn_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,jn_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,jn_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,jn_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,jn_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(jn_day[atoi(Day2)-1].date," JUNE 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=jn_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    //july

    if(atoi(Month2)==7){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=jl_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=jl_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=jl_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=jl_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=jl_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=jl_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=jl_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=jl_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=jl_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=jl_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=jl_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=jl_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,jl_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,jl_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,jl_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,jl_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,jl_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,jl_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(jl_day[atoi(Day2)-1].date," JULY 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=jl_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    //august

    if(atoi(Month2)==8){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=ag_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=ag_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=ag_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=ag_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=ag_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=ag_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=ag_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=ag_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=ag_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=ag_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=ag_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=ag_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,ag_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,ag_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,ag_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,ag_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,ag_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,ag_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(ag_day[atoi(Day2)-1].date," AUGUST 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=ag_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    //september

    if(atoi(Month2)==9){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=s_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=s_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=s_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=s_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=s_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=s_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=s_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=s_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=s_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=s_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=s_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=s_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,s_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,s_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,s_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,s_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,s_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,s_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(s_day[atoi(Day2)-1].date," SEPTEMBER 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=s_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
     //october

     if(atoi(Month2)==10){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=o_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=o_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=o_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=o_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=o_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=o_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=o_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=o_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=o_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=o_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=o_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=o_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,o_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,o_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,o_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,o_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,o_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,o_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(o_day[atoi(Day2)-1].date," OCTOBER 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=o_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    //november

    if(atoi(Month2)==11){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=n_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=n_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=n_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=n_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=n_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=n_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=n_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=n_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=n_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=n_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=n_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=n_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,n_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,n_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,n_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,n_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,n_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,n_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(n_day[atoi(Day2)-1].date," NOVEMBER 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=n_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
     //december

     if(atoi(Month2)==12){


        //iSetColor(255,255,255);
        for(int i=0;i<2;i++){
         sunrise_hour[i]=d_day[atoi(Day2)-1].sunrise[i];
	     fajr_hour[i]=d_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_hour[i]=d_day[atoi(Day2)-1].Dhuhr[i];
	     asr_hour[i]=d_day[atoi(Day2)-1].Asr[i];
	     maghrib_hour[i]=d_day[atoi(Day2)-1].Maghrib[i];
	     isha_hour[i]=d_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_hour[i]=0;
	     fajr_hour[i]=0;
	     dhuhr_hour[i]=0;
	     asr_hour[i]=0;
	     maghrib_hour[i]=0;
	     isha_hour[i]=0;
        for(int i=3;i<5;i++){
         sunrise_min[i-3]=d_day[atoi(Day2)-1].sunrise[i];
	     fajr_min[i-3]=d_day[atoi(Day2)-1].Fajr[i];
	     dhuhr_min[i-3]=d_day[atoi(Day2)-1].Dhuhr[i];
	     asr_min[i-3]=d_day[atoi(Day2)-1].Asr[i];
	     maghrib_min[i-3]=d_day[atoi(Day2)-1].Maghrib[i];
	     isha_min[i-3]=d_day[atoi(Day2)-1].Isha[i];
        }
         sunrise_min[i-3]=0;
	     fajr_min[i-3]=0;
	     dhuhr_min[i-3]=0;
	     asr_min[i-3]=0;
	     maghrib_min[i-3]=0;
	     isha_min[i-3]=0;
	     sunr_hour=atoi(sunrise_hour);
	     sunr_min=atoi(sunrise_min);
	     f_hour=atoi(fajr_hour);
	     f_min=atoi(fajr_min);
	     d_hour=atoi(dhuhr_hour);
	     d_min=atoi(dhuhr_min);
	     a_hour=atoi(asr_hour);
	     a_min=atoi(asr_min);
	     m_hour=atoi(maghrib_hour);
	     m_min=atoi(maghrib_min);
	     i_hour=atoi(isha_hour);
	     i_min=atoi(isha_min);
        iSetColor(0,102,51);
        iText(550,534,d_day[atoi(Day2)-1].Fajr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,534,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,480,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,415,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,356,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(653,292,"-",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,534,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,480,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,415,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,356,":",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(692,292,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iText(730,534,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,480,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,415,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,356,"PM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(730,292,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(822,620,"AM",GLUT_BITMAP_TIMES_ROMAN_24);
        iText(785,620,":",GLUT_BITMAP_TIMES_ROMAN_24);

        iSetColor(0,102,51);

        if(sunr_min<1){
            char f_end_hour[5];
            itoa(sunr_hour-1,f_end_hour,10);
            if(sunr_hour-1>=10){
                iText(668,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(sunr_hour-1<10){
                iText(680,534,f_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,534,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char f_end_min[5];
            itoa(sunr_min-1,f_end_min,10);
            iText(668,534,sunrise_hour,GLUT_BITMAP_TIMES_ROMAN_24);

            if(sunr_min-1>=10){
               iText(699,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
           else if(sunr_min-1<10){
               iText(699,534,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,534,f_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

        if(a_min<1){
            char d_end_hour[5];
            itoa(a_hour-1,d_end_hour,10);
             if(a_hour-1>=10){
                iText(668,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(a_hour-1<10){
                iText(680,480,d_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,480,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char d_end_min[5];
            itoa(a_min-1,d_end_min,10);
            iText(668,480,asr_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(a_min-1>=10){
               iText(699,480, d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(a_min-1<10){
               iText(699,480,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,480,d_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }

        }

         if(m_min<4){
            char a_end_hour[5];
            char a_end_min[5];
            char suns_min[5];
            itoa(60-3+m_min,suns_min,10);
            itoa(60-4+m_min,a_end_min,10);
            itoa(m_hour-1,a_end_hour,10);

            iSetColor(255,255,255);

            iText(793,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);

            iSetColor(0,102,51);

            if(m_hour-1>=10){
                iText(668,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(760,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);

                }
            else if(m_hour-1<10){
                iText(680,415,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                iSetColor(255,255,255);
                iText(775,620,a_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(760,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
                iSetColor(0,102,51);
            iText(699,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);

        }
        else{
            char a_end_min[5];
            itoa(m_min-4,a_end_min,10);
            iSetColor(255,255,255);
            char suns_min[5];
            itoa(m_min-3,suns_min,10);
            iText(760,620,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);

             iSetColor(0,102,51);

            iText(668,415,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(m_min-4>=10){
               iText(699,415, a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-4<10){
               iText(699,415,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,415,a_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            iSetColor(255,255,255);
            if(m_min-3>=10){
               iText(793,620, suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(m_min-3<10){
               iText(793,620,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(808,620,suns_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

        iSetColor(0,102,51);
         if(i_min<1){
            char m_end_hour[5];

            itoa(i_hour-1,m_end_hour,10);
            if(i_hour-1>=10){
                iText(668,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(i_hour-1<10){
                iText(680,356,m_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,356,"59",GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char m_end_min[5];
            itoa(i_min-1,m_end_min,10);
            iText(668,356,isha_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(i_min-1>=10){
               iText(699,356, m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(i_min-1<10){
               iText(699,356,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,356,m_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }

         if(f_min<7){
            char i_end_hour[5];
            char i_end_min[5];
            itoa(60-7+f_min,i_end_min,10);
            itoa(f_hour-1,i_end_hour,10);
            if(f_hour-1>=10){
                iText(668,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);}
            else if(f_hour-1<10){
                iText(680,292,i_end_hour,GLUT_BITMAP_TIMES_ROMAN_24);
                iText(668,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
                }
            iText(699,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
        }
        else{
            char i_end_min[5];
            itoa(f_min-7,i_end_min,10);
            iText(668,292,maghrib_hour,GLUT_BITMAP_TIMES_ROMAN_24);
            if(f_min-7>=10){
               iText(699,292, i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
            else if(f_min-7<10){
               iText(699,292,"0",GLUT_BITMAP_TIMES_ROMAN_24);
               iText(711,292,i_end_min,GLUT_BITMAP_TIMES_ROMAN_24);
            }
        }
        iText(550,480,d_day[atoi(Day2)-1].Dhuhr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,415,d_day[atoi(Day2)-1].Asr,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,356,d_day[atoi(Day2)-1].Maghrib,GLUT_BITMAP_TIMES_ROMAN_24);
        iText(550,292,d_day[atoi(Day2)-1].Isha,GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(255,255,255);
        iText(760,665,d_day[atoi(Day2)-1].sunrise, GLUT_BITMAP_TIMES_ROMAN_24);
        //char date_input[40]=strcat("JANUARY ",j_day[atoi(Day2)-1].date),
        iText(250,720,strcat(d_day[atoi(Day2)-1].date," DECEMBER 2023"),GLUT_BITMAP_TIMES_ROMAN_24);
        iSetColor(0,0,0);

        iText(30,175,"Dawn:", GLUT_BITMAP_HELVETICA_18);
        iText(30,115,"Noon:", GLUT_BITMAP_HELVETICA_18);
        iText(30,55,"Afternoon:",GLUT_BITMAP_HELVETICA_18);

        iText(177,175,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,115,"-",GLUT_BITMAP_HELVETICA_18);
        iText(177,55,"-",GLUT_BITMAP_HELVETICA_18);
        iText(151,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(151,55,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,175,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,115,":",GLUT_BITMAP_HELVETICA_18);
        iText(205,55,":",GLUT_BITMAP_HELVETICA_18);
        char sunr_am[20];
        for(int i=0;i<5;i++){
            sunr_am[i]=d_day[atoi(Day2)-1].sunrise[i];
        }
        sunr_am[i]=0;
        iText(130,175,sunr_am,GLUT_BITMAP_HELVETICA_18);



         if(sunr_min>=45){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min-45,f_dawn_min,10);
            itoa(sunr_hour+1,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(sunr_min-45<10){

                iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(215,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(sunr_min+15,f_dawn_min,10);
            itoa(sunr_hour,f_dawn_h,10);
            iText(195,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         //finding forbidden time in noon


         if(d_min<1){
             char f_dawn_min[5];
            char f_dawn_h[5];
            //itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             //if(d_min-45<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                //iText(210,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(210,115,"59",GLUT_BITMAP_HELVETICA_18);
            //}
            //else{
              // iText(210,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            //}

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-1,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(185,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            if(d_min-1<10){
            iText(210,115,"0",GLUT_BITMAP_HELVETICA_18);
            iText(218,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);}
            else{
               iText(210,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
         }

         /////

         if(d_min>=8){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(d_min-8,f_dawn_min,10);
            itoa(d_hour,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(d_min-8<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,115,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-8+d_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(130,115,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,115,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }
      //////finding forbidden time of afternoon

       if(m_min>=19){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-19,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-19<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(155,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(164,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-19+m_min,f_dawn_min,10);
            itoa(d_hour-1,f_dawn_h,10);
            iText(135,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(155,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



         if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(210,55,"0",GLUT_BITMAP_HELVETICA_18);
                iText(218,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(m_hour-1,f_dawn_h,10);
            iText(188,55,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(210,55,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,175,"Sahri ends:",GLUT_BITMAP_HELVETICA_18);
         iText(350,145,"Iftar starts:",GLUT_BITMAP_HELVETICA_18);
         iText(500,175,":",GLUT_BITMAP_HELVETICA_18);
         iText(500,145,":",GLUT_BITMAP_HELVETICA_18);
         iText(540,175,"AM",GLUT_BITMAP_HELVETICA_18);
         iText(540,145,"PM",GLUT_BITMAP_HELVETICA_18);

       //finding sahri and iftar time
         if(f_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(f_min-3,f_dawn_min,10);
            itoa(f_hour,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(f_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,175,"0",GLUT_BITMAP_HELVETICA_18);
                iText(521,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+f_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,175,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,175,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }



	if(m_min>=3){
             char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(m_min-3,f_dawn_min,10);
            itoa(m_hour,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
             if(m_min-3<10){
                    //char str[20];
                    //str=strcat("0",f_dawn_min);

                iText(510,145,"0",GLUT_BITMAP_HELVETICA_18);
                iText(518,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }
            else{
               iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
            }

         }
         else{
            char f_dawn_min[5];
            char f_dawn_h[5];
            itoa(60-3+m_min,f_dawn_min,10);
            itoa(f_hour-1,f_dawn_h,10);
            iText(480,145,f_dawn_h,GLUT_BITMAP_HELVETICA_18);
            iText(510,145,f_dawn_min,GLUT_BITMAP_HELVETICA_18);
         }

         iText(350,105,"Allah says,The fast is for me.So I will",GLUT_BITMAP_HELVETICA_18);
         iText(350,80,"reward (the fasting person) for it and",GLUT_BITMAP_HELVETICA_18);
         iText(350,60,"the reward of the good deeds is ",GLUT_BITMAP_HELVETICA_18);
         iText(350,35,"multiplied ten times.-Abu Huraira (R.)",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,198,"Tahajjud Salat:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,198,"Tahajjut salat is the",GLUT_BITMAP_HELVETICA_18);
         iText(680,177,"most significant nafl salat.The waqt",GLUT_BITMAP_HELVETICA_18);
         iText(680,156,"of tahajjud starts with the start of Isha",GLUT_BITMAP_HELVETICA_18);
         iText(680,135,"and ends before the start of Fajr waqt.",GLUT_BITMAP_HELVETICA_18);
         //iText(680,114,"waqt.",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,204,0);
         iText(680,95,"Salatul Duha:",GLUT_BITMAP_HELVETICA_18);
         iSetColor(0,0,0);
         iText(800,95,"It's the second most",GLUT_BITMAP_HELVETICA_18);
         iText(680,75,"significant nafl prayer. This nafl salat",GLUT_BITMAP_HELVETICA_18);
         iText(680,55,"can be prayed between sunrise and",GLUT_BITMAP_HELVETICA_18 );
         iText(680,35,"the forbidden time of noon.",GLUT_BITMAP_HELVETICA_18);

    }
    iShowBMP(620,690,"sun2.bmp");
    }
    //iShowBMP(100,100,"mosque.bmp");



}



/*
 function iMouseMove() is called when the user presses and drags the mouse.
 (mx, my) is the position where the mouse pointer is.
*/
void iMouseMove(int mx, int my)
{
//place your codes here
}
/*
 function iMouse() is called when the user presses/releases the mouse.
 (mx, my) is the position where the mouse pointer is.
*/
void iMouse(int button, int state, int mx, int my)
{
    if(button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
    {
        if(mx >= 365 && mx <= 400 && my >= 630 && my <= 660 && mode1 == 0)
		{
			mode1= 1;
		}
		else if(mx >= 408 && mx <= 447 && my >= 630 && my <= 660 && mode2 == 0)
		{
			mode2 = 1;
		}
		else if(mx >= 455 && mx <= 535 && my >= 630 && my <= 660 && mode3 == 0)
		{
			mode3 = 1;
		}
//place your codes here

         if(mx >= 347 && mx <= 600 && my >= 515 && my <= 550 && modes1 == 0)
		{
			modes1= 1;
		}
		 if(mx >= 347 && mx <= 600 && my >= 463 && my <= 498 && modes2 == 0)
		{
			modes2= 1;
		}
		 if(mx >= 347 && mx <= 600 && my >= 412 && my <= 432 && modes3 == 0)
		{
			modes3= 1;
		}
		 if(mx >= 347 && mx <= 600 && my >= 340 && my <= 372 && modes4 == 0)
		{
			modes4= 1;
		}
		 if(mx >= 347 && mx <= 600 && my >= 276 && my <= 307 && modes5 == 0)
		{
			modes5= 1;
		}

    }
    if(button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN)
    {
//place your codes here
    }
}
/*
 function iKeyboard() is called whenever the user hits a key in keyboard.
 key- holds the ASCII value of the key pressed.
*/
void iKeyboard(unsigned char key)
{
    int i,j,k;
	if(mode1== 1)
	{
        if(key == '\r')
		{
			mode1 = 0;
			strcpy(Day2, Day);
			printf("%s\n",Day2);
			for(i = 0; i < len1; i++)
				Day[i] = 0;
			len1 = 0;
		}
		else
		{
			Day[len1] = key;
			len1++;
		}
	}
		 if(mode2== 1)
	{
        if(key == '\r')
		{
			mode2 = 0;
			strcpy(Month2,Month);
			printf("%s\n", Month2);
			for(j= 0; j < len2; j++)
				Month[j] = 0;
			len2 = 0;
		}
		else
		{
			Month[len2] = key;
			len2++;
		}
	}
		 if(mode3== 1)
	{
        if(key == '\r')
		{
			mode3 = 0;
			strcpy(Year2,Year);
			printf("%s\n", Year2);
			for(k = 0; k < len3; k++)
				Year[k] = 0;
			len3 = 0;
		}
		else
		{
			Year[len3] = key;
			len3++;
		}
	}
	if(key=='\t'){
        mode=1;
	}
    /*if(key == 'q')
    {
//do something with 'q'
    }*/
//place your codes for other keys here
}
/*
function iSpecialKeyboard() is called whenver user hits special keys likefunction keys, home, end, pg up, pg down, arraows etc. you have to use
appropriate constants to detect them. A list is:
GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6,
GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11,
GLUT_KEY_F12, GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN,
GLUT_KEY_PAGE UP, GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END,
GLUT_KEY_INSERT */
void iSpecialKeyboard(unsigned char key)
{
    if(key == GLUT_KEY_END)
    {
        exit(0);
    }
   /* if(key== GLUT_KEY_INSERT)
    {
        mode=1;
    }*/

//place your codes for other keys here
}

//timer function implemant try1

void timer()

{
    time_t t = time(NULL);
    struct tm tm = *localtime(&t);
    Hour=tm.tm_hour;
    Minute= tm.tm_min;
    Second= tm.tm_sec;
    int fajr_time=f_hour*3600+f_min*60;
    int dhuhr_time=d_hour*3600+d_min*60;
    int asr_time=(a_hour+12)*3600+a_min*60;
    int maghrib_time=(m_hour+12)*3600+m_min*60;
    int isha_time=(i_hour+12)*3600+i_min*60;
    //int next_fajr_time=86400-time;
    int time=Hour*3600+Minute*60+Second;
    int difference;
    int hr,mn,sc;
    if(time>fajr_time&&time<dhuhr_time){
        difference=dhuhr_time-time;
        hr=difference/3600;
        mn=(difference%3600)/60;
        sc=((difference%3600)%60);
        itoa(hr,rem_hour,10);
        itoa(mn,rem_min,10);
        itoa(sc,rem_sec,10);

    }


    if(time>dhuhr_time&&time<asr_time){
        difference=asr_time-time;
        hr=difference/3600;
        mn=(difference%3600)/60;
        sc=((difference%3600)%60);
        itoa(hr,rem_hour,10);
        itoa(mn,rem_min,10);
        itoa(sc,rem_sec,10);

    }
    if(time>asr_time&&time<maghrib_time){
        difference=maghrib_time-time;
        hr=difference/3600;
        mn=(difference%3600)/60;
        sc=((difference%3600)%60);
        itoa(hr,rem_hour,10);
        itoa(mn,rem_min,10);
        itoa(sc,rem_sec,10);

    }
     if(time>maghrib_time&&time<isha_time){
        difference=isha_time-time;
        hr=difference/3600;
        mn=(difference%3600)/60;
        sc=((difference%3600)%60);
        itoa(hr,rem_hour,10);
        itoa(mn,rem_min,10);
        itoa(sc,rem_sec,10);

    }
    if((time>isha_time&&time>fajr_time)||(time<fajr_time&&time<isha_time)){
        if(f_hour<Hour){
        difference=86400+fajr_time-time;
        hr=difference/3600;
        mn=(difference%3600)/60;
        sc=((difference%3600)%60);
        itoa(hr,rem_hour,10);
        itoa(mn,rem_min,10);
        itoa(sc,rem_sec,10);}
        else if(f_hour>Hour)
        {
            difference=fajr_time-time;
        hr=difference/3600;
        mn=(difference%3600)/60;
        sc=((difference%3600)%60);
        itoa(hr,rem_hour,10);
        itoa(mn,rem_min,10);
        itoa(sc,rem_sec,10);
        }
    }

}


void second()

{
    sx=65*cos(ps/57.29);
    sy=65*sin(ps/57.29);
    xs=110+sx;
    ys=682+sy;
    ps=ps-6;
}
void minute()
{
    mx=50*cos(pm/57.29);
    my=50*sin(pm/57.29);
    xm=110+mx;
    ym=682+my;
    pm=pm-.1;
}
void hour()
{
    hx=30*cos(ph/57.29);
    hy=30*sin(ph/57.29);
    xh=110+hx;
    yh=682+hy;
    ph=ph-1/600;
}


int main()
{
    time_t rawtime;
    tm * ptm;

    time ( &rawtime );

    ptm = gmtime ( &rawtime );   //getting time from bios

    H=(ptm->tm_hour+6)%24;
    M=(ptm->tm_min);
    S=(ptm->tm_sec)+2;
    /*string h=to_string(H);
    string m=to_string(M);
    string s=to_string(S);*/
    //printf("%d %d %d",H,M,S);

    ph =(3-H)*30.0-30*M/60.0-30*S/3600.0+.1/600+270+90;

    pm= (15-M)*6.0-S/60.0+.1+270+90;
    ps = (15-S)*6.0+6+270+90;


    second();
    minute();
    hour();


    iSetTimer(1000,second);
    iSetTimer(1000,minute);
    iSetTimer(1000,hour);
    iSetTimer(1000,timer);
    //getting date
    /*struct date dt;
    getdate(&dt);
     itoa(dt.da_day,Day2,10);
     itoa(dt.da_mon,Month2,10);
     itoa(dt.da_year,Year2,10);*/
     time_t t = time(NULL);
    struct tm tm = *localtime(&t);
    itoa(tm.tm_mday,Day2,10);
    itoa(tm.tm_mon+1,Month2,10);
    itoa(tm.tm_year+1900,Year2,10);
    //printf("Date and time: %d-%02d-%02d %02d:%02d:%02d\n",tm.tm_mday, tm.tm_mon + 1,tm.tm_year + 1900, tm.tm_hour, tm.tm_min, tm.tm_sec);

    //ishowbmp
     mode=0,

    len1 = 0;
    len2=0;
    len3=0;
	mode1 =0;
	mode2=0;
	mode3=0;
	modes1=0;
	modes2=0;
	modes3=0;
	modes4=0;
	modes5=0;
	Day[0]= 0;
	Month[0]=0;
	Year[0]=0;
    x=10,y=272,dx=980,dy=247+60,a1=337,b1=282,a2=337,b2=509+50;
    iInitialize(1000, 790, "Muslim's Day");
    return 0;
}
